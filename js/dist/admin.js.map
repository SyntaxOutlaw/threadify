{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCExDC,QAAQC,IAAI,qCAEZC,IAAAA,aAAiBC,IAAI,+BAAgC,WACnDD,IAAAA,cAAiB,IACV,0BACJE,gBAAgB,WAAY,IAAAC,EAAA,KAC3B,OAAOC,EAAE,MAAO,CACdA,EAAE,SAAU,CACVC,UAAW,wBACXC,QAAS,WACFC,QAAQ,mFACbJ,EAAKK,SAAU,EACfJ,EAAEK,SACFT,IAAAA,QAAY,CACVU,OAAQ,OACRC,IAAKX,IAAAA,MAAUY,UAAU,UAAY,wCACpCC,KAAK,SAAAC,GACNC,MAAM,sBAAwBC,KAAKC,UAAUH,EAAOI,QAAS,KAAM,IACnEf,EAAKK,SAAU,EACfJ,EAAEK,QACJ,GAAE,MAAO,SAAAU,GACPJ,MAAM,WAAaI,EAAEC,SAAWD,IAChChB,EAAKK,SAAU,EACfJ,EAAEK,QACJ,GACF,EACAY,SAAUC,KAAKd,SACdc,KAAKd,QAAU,gBAAkB,0CAExC,EACJ,E","sources":["webpack://@syntaxoutlaw/flarum-ext-threadify/webpack/bootstrap","webpack://@syntaxoutlaw/flarum-ext-threadify/webpack/runtime/compat get default export","webpack://@syntaxoutlaw/flarum-ext-threadify/webpack/runtime/define property getters","webpack://@syntaxoutlaw/flarum-ext-threadify/webpack/runtime/hasOwnProperty shorthand","webpack://@syntaxoutlaw/flarum-ext-threadify/external root \"flarum.core.compat['admin/app']\"","webpack://@syntaxoutlaw/flarum-ext-threadify/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","import app from 'flarum/admin/app';\n\nconsole.log('[Threadify] Admin panel JS loaded');\n\napp.initializers.add('syntaxoutlaw-threadify-admin', () => {\n  app.extensionData\n    .for('syntaxoutlaw-threadify')\n    .registerSetting(function () {\n      return m('div', [\n        m('button', {\n          className: 'Button Button--danger',\n          onclick: () => {\n            if (!confirm('Are you sure? This will rebuild parent_id and threadify_threads from scratch!')) return;\n            this.loading = true;\n            m.redraw();\n            app.request({\n              method: 'POST',\n              url: app.forum.attribute('apiUrl') + '/threadify/admin/rebuild-parent-ids',\n            }).then(result => {\n              alert('Rebuild complete!\\n' + JSON.stringify(result.results, null, 2));\n              this.loading = false;\n              m.redraw();\n            }).catch(e => {\n              alert('Error: ' + (e.message || e));\n              this.loading = false;\n              m.redraw();\n            });\n          },\n          disabled: this.loading\n        }, this.loading ? 'Rebuilding...' : 'Danger: Rebuild parent_id and threads')\n      ]);\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","console","log","app","add","registerSetting","_this","m","className","onclick","confirm","loading","redraw","method","url","attribute","then","result","alert","JSON","stringify","results","e","message","disabled","this"],"sourceRoot":""}